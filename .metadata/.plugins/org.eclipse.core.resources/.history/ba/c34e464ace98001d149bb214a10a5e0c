package config.copy;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.springframework.stereotype.Component;
import org.springframework.util.ResourceUtils;

import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.json.JsonMapper;

import lombok.Getter;
import lombok.extern.slf4j.Slf4j;

@Component
@Slf4j
@Getter
public class ConfigurationReader {
	
	public void readFromFileName( String filename) throws FileNotFoundException {
		File file = new File(filename);
		if (file.exists())
			readFromFile(file);
		else
			throw new FileNotFoundException("No such configfile: " + filename);
	}
	
	public void readFromFile(File file) {
		try {
			JsonMapper mapper = JsonMapper.builder().configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true).build();
			Configuration config = mapper.readValue(file, Configuration.class);
			log.info("Loaded {} Configuration", config.getLayout());
			log.info("Building GPIO interface");
			

			
		} catch (IOException e) {
			log.error("Error parsing LDTerms JSON", e);
		}
	}
	
	public void readFromClasspath(String filename) throws FileNotFoundException {
		File file = ResourceUtils.getFile("classpath:" + filename);
		readFromFile(file);
	}
}
